# -*- coding: utf-8 -*-
"""[DL]Week4_Text_Similarity계산.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TUD0GtAZA0jzQnvyI8Idh0-EioS3ASgz

### 코사인 유사도 (Cosine_Similarity)
"""

from numpy import dot
from numpy.linalg import norm
import numpy as np

def cos_sim(A, B):
       return dot(A, B)/(norm(A)*norm(B))

doc1 = np.array([0,1,1,1])
doc2 = np.array([1,0,1,1])
doc3 = np.array([2,0,2,2])

print('문서1과 문서2의 유사도 : ', cos_sim(doc1, doc2))
print('문서1과 문서3의 유사도 : ', cos_sim(doc1, doc3))
print('문서2과 문서3의 유사도 : ', cos_sim(doc2, doc3))

"""### 유사도를 이용한 추천 시스템"""

import kagglehub
import shutil
import os

# 가장 최신 버전 다운
path = kagglehub.dataset_download("rounakbanik/the-movies-dataset")

target_dir = "movies"

# 디렉터리 복사
shutil.copytree(path, target_dir, dirs_exist_ok=True)

print("원본: ", path)
print("복사된 경로: ", os.path.abspath(target_dir))

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel, cosine_similarity

data = pd.read_csv('movies/movies_metadata.csv', low_memory=False)
data.head(2)

# 상위 2만개의 샘플을 data에 저장
data = data.head(20000)
print('overview 열의 결측값의 수 : ', data['overview'].isnull().sum())

# overview 열에 존재하는 모든 결측값을 전부 카운트하여 출력
data['overview'] = data['overview'].fillna('')

tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(data['overview'])

print('TF-IDF 행렬 크기 (shape) : ', tfidf_matrix.shape)

cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)
print('코사인 유사도 연산 결과 : ', cosine_sim.shape)

title_to_index = dict(zip(data['title'], data.index))

idx = title_to_index['Father of the Bride Part II']
print(idx)

def get_recommandations(title, cosine_sim=cosine_sim):
    idx = title_to_index[title]

    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:11] # 0은 자기 자신이라서 1부터 시작
    movie_indices = [idx[0] for idx in sim_scores]
    return data['title'].iloc[movie_indices]

get_recommandations('The Dark Knight Rises')

